//
//  QSSegmentInteractor.swift
//  zhuishushenqi
//
//  Created caonongyun on 2017/4/20.
//  Copyright © 2017年 QS. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import QSNetwork
import HandyJSON
import ZSAPI

//        http://api.zhuishushenqi.com/book/by-categories?gender=male&type=new&major=都市&minor=&start=0&limit=50
class QSSegmentInteractor: QSSegmentInteractorProtocol {

    var output: QSSegmentInteractorOutputProtocol?
    
    var param:[String:Any] = [:]
    
    var models:[[Book]] = [[],[],[],[]]
    
    var selectedIndex = 0
    
    var segTitles = ["新书","热度","口碑","完结"]
    
    var start:Int = 0
    
    let limit:Int = 50
    
    func request(index:Int,startIndex:Int){
        
        let types = ["new","hot","reputation","over"]
        let major:String = param["major"] as? String ?? ""
        let gender:String = param["gender"] as? String ?? ""
        let type:String = types[index]
        let api = ZSAPI.categoryList(gender: gender, type: type, major:  major, minor: "", start: "\(startIndex)", limit: "\(limit)")
        QSNetwork.request(api.path, method: HTTPMethodType.get, parameters: api.parameters, headers: nil) { (response) in
            QSLog(response.json)
            if let books = response.json?.object(forKey: "books"){
                if let booksModel = [Book].deserialize(from: books as? [Any]) as? [Book] {
                    var curModels = self.models[index]
                    curModels += booksModel
                    self.models[index] = curModels
                    self.output?.fetchDataSuccess(models: curModels)
                } else {
                    self.output?.fetchDataFailed()
                }
            }else{
                self.output?.fetchDataFailed()
            }
        }
    }
    
    func request(index:Int){
        selectedIndex = index
//        if models[index].count > 0 {
//            self.output?.fetchDataSuccess(models: models[index])
//            return
//        }
        let types = ["new","hot","reputation","over"]
        let major:String = param["major"] as? String ?? ""
        let gender:String = param["gender"] as? String ?? ""
        let type:String = types[index]
        let api = ZSAPI.categoryList(gender: gender, type: type, major:  major, minor: "", start: "\(start)", limit: "\(limit)")
        QSNetwork.request(api.path, method: HTTPMethodType.get, parameters: api.parameters, headers: nil) { (response) in
            QSLog(response.json)
            if let books = response.json?.object(forKey: "books"){
                if let booksModel = [Book].deserialize(from: books as? [Any]) as? [Book] {
                    self.models[index] = booksModel
                    self.output?.fetchDataSuccess(models: booksModel)
                } else {
                    self.output?.fetchDataFailed()
                }
            }else{
                self.output?.fetchDataFailed()
            }
        }
    }
    
    func requestMore(){
        start += 50
        self.request(index: selectedIndex, startIndex: start)
    }
    
    func showSeg(){
        self.output?.showSeg(titles: segTitles)
    }
    
    func showDetail(indexPath: IndexPath) {
        let book = self.models[selectedIndex][indexPath.row]
        self.output?.showDetail(book: book)
    }
}

